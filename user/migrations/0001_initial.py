# Generated by Django 5.0.6 on 2024-07-21 19:07

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import location_field.models.plain
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("country", models.CharField(blank=True, max_length=255, null=True)),
                ("city", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "current_city",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "street_address",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "apartment_address",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "location",
                    location_field.models.plain.PlainLocationField(
                        blank=True, max_length=63, null=True
                    ),
                ),
                ("postal_code", models.CharField(blank=True, max_length=20, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ("-created_at",),
            },
        ),
        migrations.CreateModel(
            name="BusinessCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=250)),
                ("desc", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, null=True, unique=True
                    ),
                ),
                (
                    "is_business",
                    models.BooleanField(default=False, verbose_name="Business Account"),
                ),
                (
                    "is_personal",
                    models.BooleanField(default=False, verbose_name="Personal Account"),
                ),
                (
                    "is_admin",
                    models.BooleanField(default=False, verbose_name="Admin Account"),
                ),
                (
                    "phone_number",
                    models.BigIntegerField(blank=True, null=True, unique=True),
                ),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="Verified"),
                ),
                ("last_seen", models.DateTimeField(blank=True, null=True)),
                ("otp", models.CharField(blank=True, max_length=5)),
                ("otp_verified", models.BooleanField(default=False)),
                ("secret_key", models.CharField(max_length=64)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "swappable": "AUTH_USER_MODEL",
            },
        ),
        migrations.CreateModel(
            name="CoverImageMedia",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "media",
                    models.FileField(blank=True, null=True, upload_to="cover_files/"),
                ),
                ("image", models.ImageField(upload_to="images/original/")),
                (
                    "blurred_image",
                    models.ImageField(
                        blank=True, null=True, upload_to="images/blurred/"
                    ),
                ),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                ("is_sensitive", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField()),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "recipient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications_received",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications_sent",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProfileMedia",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "media",
                    models.FileField(blank=True, null=True, upload_to="profile_files/"),
                ),
                ("image", models.ImageField(upload_to="images/original/")),
                (
                    "blurred_image",
                    models.ImageField(
                        blank=True, null=True, upload_to="images/blurred/"
                    ),
                ),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                ("is_sensitive", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ReportedUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.TextField()),
                (
                    "is_banned",
                    models.BooleanField(default=False, verbose_name="Banned"),
                ),
                (
                    "is_disabled",
                    models.BooleanField(default=False, verbose_name="Disabled"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("work", models.CharField(blank=True, max_length=255, null=True)),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Male", "Male"),
                            ("Female", "Female"),
                            ("Rather not say", "Rather not say"),
                        ],
                        max_length=15,
                        null=True,
                    ),
                ),
                (
                    "custom_gender",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                (
                    "religion",
                    models.CharField(
                        choices=[
                            ("Christianity", "Christianity"),
                            ("Muslim", "Muslim"),
                            ("Indigenous", "Indigenous"),
                            ("Others", "Others"),
                        ],
                        max_length=20,
                        verbose_name="Religion",
                    ),
                ),
                (
                    "is_flagged",
                    models.BooleanField(default=False, verbose_name="Flagged"),
                ),
                ("has_updated_profile", models.BooleanField(default=False)),
                (
                    "address",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_address",
                        to="user.address",
                    ),
                ),
                (
                    "cover_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_cover_image",
                        to="user.coverimagemedia",
                    ),
                ),
                (
                    "favorite_categories",
                    models.ManyToManyField(
                        blank=True,
                        related_name="users_with_favorite",
                        to="user.businesscategory",
                    ),
                ),
                (
                    "media",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_media",
                        to="user.profilemedia",
                    ),
                ),
                (
                    "stickers",
                    models.ManyToManyField(
                        related_name="sticking", to="user.userprofile"
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BlockedUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("reason", models.TextField(blank=True, null=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "blocked_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="blockers",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "blocker",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="blocked_users",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("blocker", "blocked_user")},
            },
        ),
    ]
